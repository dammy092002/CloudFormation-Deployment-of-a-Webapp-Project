AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  Environmentname:
    Description: An Environment name that will be prefixed to Resources
    Type: String
Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to the load balancer
      VpcId:
       Fn::ImportValue:
         !Sub "${Environmentname}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
  WebServerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http and SSH to our hosts
      VpcId:
         Fn::ImportValue:
           !Sub "${Environmentname}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8080
        ToPort: 8080
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  WebAppRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: root
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action: "*"
          Resource: "*"
      Roles:
      - !Ref WebAppRole
  WebAppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: WebAppInstanceProfile
      Path: "/"
      Roles:
      - !Ref WebAppRole
  WebAppLaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: WebAppInstanceProfile
      #- !Ref WebAppInstanceProfile
      ImageId: ami-000b2efc63395ae03
      #InstanceType: t2.micro
      InstanceType: t3.small
      #KeyName: myoregonkey
      LaunchConfigurationName: WebAppLaunchConfig
      SecurityGroups:
      - !Ref WebServerSecGroup
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
      UserData:
         Fn::Base64: !Sub |
            #!/bin/bash
            sudo apt-get update -y
            sudo apt-get install unzip awscli -y
            sudo apt-get install apache2 -y
            sudo systemctl start apache2.service
            sudo chown ubuntu:ubuntu /var/www/html/
            cd /var/www/html
            aws s3 cp s3://udacity-bucket-111/udacity.zip .
            sudo unzip -o udacity.zip
  WebAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    DependsOn: WebAppLaunchConfig
    Properties:
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${Environmentname}-PRIV-NETS"
      LaunchConfigurationName: WebAppLaunchConfig
      #- !Ref WebAppLaunchConfig
      MinSize: '2'
      MaxSize: '5'
      HealthCheckGracePeriod: 300
      TargetGroupARNs:
      - !Ref WebAppTargetGroup
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
     Subnets:
     - Fn::ImportValue: !Sub "${Environmentname}-PUB1-SN"
     - Fn::ImportValue: !Sub "${Environmentname}-PUB2-SN"
     SecurityGroups:
      - !Ref LBSecGroup
  Listener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
       - Type: "forward"
         TargetGroupArn:
           Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: 80
      Protocol: "HTTP"
  LBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
        - Field: path-pattern
          Values: [/]
      ListenerArn: !Ref 'Listener'
      Priority: 1
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
           Fn::Sub: "${Environmentname}-VPCID"

Outputs:
  WebAppLB:
    Description: WebAppLB DNS Name
    Value:
      Fn::Join:
        - ''
        - - "http://"
          - Fn::GetAtt: WebAppLB.DNSName
